scalar Date

schema {
    query: Query,
    mutation: Mutation
}

type About {
    id:Int
    dob:String
    gender:String
    bio:String
}

type User {
    id:Int
    name:String
    username:String
    email:String
    password:String
    phone:String
    displayPicture:String
    coverPicture:String
    rating:Float
    createdAt:String
    updatedAt:String
    role:Int
    about:About
}

type Comment {
    userId:Int
    userName:String
    commentText:String
    likeCount:Int
}

type Post {
    id:String
    title:String
    userId:Int
    userName:String
    contentText:String
    date:Date
    likeCount:Int
    commentList:[Comment]
}

input UserInput {
    id:Int
    name:String
}

input AboutInput {
    id:Int
    dob:String
    bio:String
}

type Query{
    getUser(id:Int): User
    getAbout(id:Int): About
    showFeed: [Post]
    getPost(id: String): Post
    getComment(id: String): Comment
}

type Mutation{
    updateUser(userInput:UserInput):User
    updateAbout(aboutInput:AboutInput): About
}